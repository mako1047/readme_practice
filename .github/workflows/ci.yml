name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: docker compose build
        shell: bash

      - name: Start Docker Compose
        run: docker compose up -d
        shell: bash

      - name: Run ESLint
        run: docker compose exec devtools npx eslint --max-warnings 0 .
        shell: bash

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: docker compose build
        shell: bash

      - name: Start Docker Compose
        run: docker compose up -d
        shell: bash

      - name: Run Prettier
        run: docker compose exec devtools npx prettier --check .
        shell: bash

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: docker compose build
        shell: bash

      - name: Start Docker Compose
        run: docker compose up -d
        shell: bash

      - name: Type Check
        run: docker compose exec devtools npm run type-check
        shell: bash

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: docker compose build
        shell: bash

      - name: Start Docker Compose
        run: docker compose up -d
        shell: bash

      - name: Build
        run: docker compose exec backend bash -c "cd backend && npx prisma generate && npm run build"
        shell: bash

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Images
        run: docker compose build
        shell: bash

      - name: Start Docker Compose
        run: docker compose up -d
        shell: bash

      - name: Build
        run: docker compose exec frontend bash -c "cd frontend && npm run build"
        shell: bash
